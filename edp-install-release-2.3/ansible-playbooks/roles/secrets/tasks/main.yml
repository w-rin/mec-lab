# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

- block:
  - name: "Get autouser login from the temporary secret"
    shell: >
     {{ console_tool }} -n {{ edp_deploy_project }} get secret {{ vcs_auto_user_secret_name }}
     --template={% raw %}'{{ index .data "username" }}'{% endraw %} | base64 --decode
    register: vcs_auto_user_login
    no_log: true

  - name: "Get autouser password from the temporary secret"
    shell: >
     {{ console_tool }} -n {{ edp_deploy_project }} get secret {{ vcs_auto_user_secret_name }}
     --template={% raw %}'{{ index .data "password" }}'{% endraw %} | base64 --decode
    register: vcs_auto_user_password
    no_log: true

  - name: "Get autouser ssh private key from the temporary secret"
    shell: >
     {{ console_tool }} -n {{ edp_deploy_project }} get secret {{ vcs_auto_user_secret_name }}
     --template={% raw %}'{{ index .data "ssh-privatekey" }}'{% endraw %} | base64 --decode
    register: vcs_auto_user_ssh_privatekey
    no_log: true

  - name: "Set fact with VCS autouser credentials"
    set_fact:
       vcs_auto_user_login: "{{ vcs_auto_user_login.stdout }}"
       vcs_auto_user_password: "{{ vcs_auto_user_password.stdout }}"
       vcs_auto_user_ssh_privatekey: "{{ vcs_auto_user_ssh_privatekey.stdout }}"
    no_log: true

  - name: "Delete the temporary secret"
    shell: >
     {{ console_tool }} -n {{ edp_deploy_project }} delete secret {{ vcs_auto_user_secret_name }}
    register: result

  - name: "Create file with key"
    copy:
      content: "{{ vcs_auto_user_ssh_privatekey }}"
      dest: "/tmp/vcs-private.key"
      mode: 0400

  - name: "Create VCS Autouser secret"
    register: result
    ignore_errors: true
    command: |
      {{ console_tool }} -n {{ project_cicd }} create secret generic vcs-autouser
      --from-literal=username={{ vcs_auto_user_login }}
      --from-file=ssh-privatekey=/tmp/vcs-private.key
    changed_when: '"already" not in result.stderr'
    failed_when:
      - 'result.rc != 0'
      - '"already" not in result.stderr'
    no_log: true
  when: vcs_integration_enabled|bool == true