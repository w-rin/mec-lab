# Copyright 2019 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: "Get username from security project Keycloak secret"
  shell: >
    {{ console_tool }} -n {{ keycloak_namespace }} get secret keycloak
    --template={% raw %}'{{ index .data "username" }}'{% endraw %} | base64 --decode
  register: username
  check_mode: no

- name: "Get password from security project Keycloak secret"
  shell: >
    {{ console_tool }} -n {{ keycloak_namespace }} get secret keycloak
    --template={% raw %}'{{ index .data "password" }}'{% endraw %} | base64 --decode
  register: password
  no_log: true
  check_mode: no

- name: "Check Keycloak secret for admin connection exists"
  command: |
    {{ console_tool }} -n {{ project_cicd }} get secret keycloak-main-secret
    --output=custom-columns=NAME:.metadata.name --no-headers --ignore-not-found=true
  no_log: true
  check_mode: no
  register: keycloak_secret
  ignore_errors: "{{ ansible_check_mode }}"

- name: "Install Keycloak secret for admin connection"
  command: |
    {{ console_tool }} -n {{ project_cicd }} create secret generic keycloak-main-secret
    --from-literal=username={{ username.stdout }}
    --from-literal=password={{ password.stdout }}
  no_log: true
  when: keycloak_secret.stdout is not search("keycloak-main-secret")
  check_mode: no
  ignore_errors: "{{ ansible_check_mode }}"

- set_fact:
    keycloak_super_admins: "{{ keycloak_super_admins | default([]) + [ { 'username': item } ] }}"
  when: item != ""
  with_items:
    - "{{ edp_super_admins }}"

- set_fact:
    keycloak_admins: "{{ keycloak_admins | default([]) + [ { 'username': item } ] }}"
  when: item != ""
  with_items:
    - "{{ edp_admins }}"

- set_fact:
    keycloak_developers: "{{ keycloak_developers | default([]) + [ { 'username': item } ] }}"
  when: item != ""
  with_items:
    - "{{ edp_viewers }}"

- name: "Create directory for Keycloak templates"
  file:
    path: "{{ templates_dir }}/keycloak"
    state: directory

- name: "Copy Keycloak template"
  template:
    src: "keycloak-cr.yaml"
    dest: "{{ templates_dir}}/keycloak/keycloak-cr.yaml"

- name: "Install Keycloak CR"
  command: |
    {{ console_tool }} -n {{ project_cicd }} apply -f {{ templates_dir}}/keycloak/keycloak-cr.yaml
