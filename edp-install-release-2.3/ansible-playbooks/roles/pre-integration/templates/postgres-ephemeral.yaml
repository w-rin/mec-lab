# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
   name: postgres-ephemeral
   annotations:
     iconClass: icon-postgresql
     description: Openshift template for Postgres service
     openshift.io/provider-display-name: EDP
     openshift.io/support-url: https://www.epam.com
     tags: edp
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME}
    labels:
      app: ${SERVICE_NAME}
  spec:
    ports:
    - name: db
      port: 5432
    selector:
      app: ${SERVICE_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${SERVICE_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${SERVICE_NAME}
    labels:
      app: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 1200
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: ${SERVICE_NAME}
      spec:
        containers:
        - name: ${SERVICE_NAME}
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: ${SERVICE_NAME}
                key: database-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${SERVICE_NAME}
                key: database-password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POD_IP
            valueFrom: { fieldRef: { fieldPath: status.podIP } }
          - name: POSTGRES_DB
            value: ${DB_NAME}
          image: "${SERVICE_IMAGE}:${SERVICE_VERSION}"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: ${MEMORY_LIMIT}
          ports:
            - name: db
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP -U $PG_USERNAME -d $DB_NAME
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 20
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP -U $PG_USERNAME -d $DB_NAME
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 20
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        serviceAccountName: ${SERVICE_NAME}
    triggers:
      - type: ConfigChange
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${SERVICE_NAME}
  stringData:
    database-user: ${PG_USERNAME}
    database-password: ${PG_PASSWORD}
parameters:
- displayName: Service name
  name: SERVICE_NAME
  required: true
  value: "postgres-ephemeral"
- displayName: Service version
  name: SERVICE_VERSION
  required: true
  value: "9.6"
- displayName: Service image
  name: SERVICE_IMAGE
  required: true
  value: "postgres"
- displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: Postgres user
  name: PG_USERNAME
  required: true
  value: "postgres"
- displayName: Postgres password
  name: PG_PASSWORD
  from: "[a-z0-9]{8}"
  generate: expression
  required: true
- displayName: Postgres DB name
  name: DB_NAME
  required: true
  value: "postgres"