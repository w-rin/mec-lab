# Copyright 2019 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- include_tasks: "{{ platform_type }}.yml"

- name: "Create rolebindings for operators"
  shell: >
    {{ console_tool }} create rolebinding operators-admin-role-to-edp-sa
    --clusterrole=admin
    --serviceaccount={{ operators_deploy_project }}:edp
    --namespace={{ project_cicd }}
  when: "project_cicd not in current_projects_list"

- name: "Looking for shared secrets"
  shell: >
     {{ console_tool }} get secret -n {{ edp_deploy_project }} -o custom-columns=NAME:.metadata.name
     --no-headers=true | grep {{ shared_secrets_mask }}
  register: edp_shared_secrets
  ignore_errors: true
  check_mode: no

- name: "Clone shared secrets to CICD project"
  shell: >
    {{ console_tool }} get --export -o yaml secret {{ item }} -n {{ edp_deploy_project }} |
    oc -n {{ project_cicd }} apply -f - &&
    {{ console_tool }} get --export -o yaml secret {{ item }} -n {{ edp_deploy_project }} |
    sed -e 's/{{ item }}/{{ item | regex_replace(shared_secrets_mask) }}/' |
    oc -n {{ project_cicd }} apply -f -
  with_items:
    - "{{ edp_shared_secrets.stdout_lines }}"

- name: Creates directory for templates
  file:
    path: "{{ templates_dir }}/{{ item }}"
    state: directory
  with_items:
    - "{{ tools.keys() }}"

- name: Create ConfigMap with EDP Config
  shell: >
    {{ console_tool }} create -n {{ project_cicd }} configmap edp-config
    --from-literal=edp_name={{ edp_name }}
    --from-literal=edp_version={{ edp_version.split(':') | last }}
    --from-literal=dns_wildcard={{ dns_wildcard }}
    --from-literal=perf_integration_enabled={{ perf_integration_enabled }}
    --from-literal=vcs_integration_enabled={{ vcs_integration_enabled }}
    {{ '--from-literal=vcs_group_name_url=' + vcs_group_name if vcs_integration_enabled|bool == true else '' }}
    {{ '--from-literal=vcs_tool_name=' + vcs_tool_name | lower if vcs_integration_enabled|bool == true else '' }}
    {{ '--from-literal=vcs_ssh_port=' + vcs_ssh_port if vcs_integration_enabled|bool == true else '' }}
    --dry-run -o yaml | {{ console_tool }} -n {{ project_cicd }} apply -f -

- include_tasks: database_configuration.yml
